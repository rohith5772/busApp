{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RSTPL065\\\\Desktop\\\\my-app\\\\src\\\\components\\\\DetailingPage\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DetailingPage() {\n  _s();\n  const next = useNavigate();\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n_s(DetailingPage, \"N4SA8m8FbbCaSHlziAIUleimxYw=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = DetailingPage;\nvar _c;\n$RefreshReg$(_c, \"DetailingPage\");","map":{"version":3,"names":["React","useLocation","useNavigate","DetailingPage","next","location"],"sources":["C:/Users/RSTPL065/Desktop/my-app/src/components/DetailingPage/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nexport default function DetailingPage(){\r\n    const next = useNavigate();\r\n    const location = useLocation();\r\n    return <div>\r\n       \r\n       {/* <div>{location.state[0]}</div>\r\n       <div>{location.state[1]}</div>\r\n       <div>{location.state[2]}</div>\r\n        <button onClick={() => { next(\"/\") }}>Back To Home</button> */}\r\n        {/* {location.state.map((bus: { id: React.Key | null | undefined; name: string | number | boolean | React.ReactElement<any, string | React.JSXElementConstructor<any>> | React.ReactFragment | React.ReactPortal | null | undefined; }, index: number) => (\r\n        <div key={index}>\r\n          <p>{index}. {bus.name}</p>\r\n        </div>\r\n      ))} */}\r\n\r\n      \r\n    </div>\r\n}\r\n    "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC;AAC5D,eAAe,SAASC,aAAa,GAAE;EAAA;EACnC,MAAMC,IAAI,GAAGF,WAAW,EAAE;EAC1B,MAAMG,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,oBAAO;IAAA;IAAA;IAAA;EAAA,QAaD;AACV;AAAC,GAjBuBE,aAAa;EAAA,QACpBD,WAAW,EACPD,WAAW;AAAA;AAAA,KAFRE,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}